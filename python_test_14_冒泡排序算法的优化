#简述：如果在比较的范围之内发现每个相邻的元素之间的大小已经确定就不需要再进行比较，因此进行以下优化
#思路：添加比较次数的计数，当计数为0时停止比较

lst = [1,9,8,5,6,7,4,3,2]
for i in range(9):
    count = 0
    for j in range(8-i):
        if lst[j] > lst[j+1]:
            lst[j],lst[j+1] = lst[j+1],lst[j]
            count = 1
    else:
        print("cishu ",i," ",lst,"count=",count)
    if count == 0:  #如果此处为0,则表名内部不再进行比较
        break

print(lst)

#优化运行的结果如下所示
cishu  0   [1, 8, 5, 6, 7, 4, 3, 2, 9] count= 1
cishu  1   [1, 5, 6, 7, 4, 3, 2, 8, 9] count= 1
cishu  2   [1, 5, 6, 4, 3, 2, 7, 8, 9] count= 1
cishu  3   [1, 5, 4, 3, 2, 6, 7, 8, 9] count= 1
cishu  4   [1, 4, 3, 2, 5, 6, 7, 8, 9] count= 1
cishu  5   [1, 3, 2, 4, 5, 6, 7, 8, 9] count= 1
cishu  6   [1, 2, 3, 4, 5, 6, 7, 8, 9] count= 1
cishu  7   [1, 2, 3, 4, 5, 6, 7, 8, 9] count= 0
[1, 2, 3, 4, 5, 6, 7, 8, 9]

分析：此处第7次的结果和第6次相同是因为第6次还需要一次数据交换才可以达到排序正确，第七次就是排号的结果(即：break跳出的结果)


#没有优化的结果如下
cishu  0   [1, 8, 5, 6, 7, 4, 3, 2, 9] count= 0
cishu  1   [1, 5, 6, 7, 4, 3, 2, 8, 9] count= 0
cishu  2   [1, 5, 6, 4, 3, 2, 7, 8, 9] count= 0
cishu  3   [1, 5, 4, 3, 2, 6, 7, 8, 9] count= 0
cishu  4   [1, 4, 3, 2, 5, 6, 7, 8, 9] count= 0
cishu  5   [1, 3, 2, 4, 5, 6, 7, 8, 9] count= 0
cishu  6   [1, 2, 3, 4, 5, 6, 7, 8, 9] count= 0
cishu  7   [1, 2, 3, 4, 5, 6, 7, 8, 9] count= 0
cishu  8   [1, 2, 3, 4, 5, 6, 7, 8, 9] count= 0
[1, 2, 3, 4, 5, 6, 7, 8, 9]

